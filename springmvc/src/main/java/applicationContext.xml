<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	 xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	 xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
     http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
     http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<context:annotation-config />
	<context:component-scan base-package="springmvc" />
	
	
	<!-- 引入属性文件 -->  
    <context:property-placeholder location="classpath:mail.properties" ignore-unresolvable="true"/>  
    
     <!-- 邮件发送器 qq  -->  
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">  
        <property name="host" value="${mail.host}" />  
        <property name="username" value="${mail.username}" />  
        <property name="password" value="${mail.smtp.password}" />  
        <property name="defaultEncoding" value="UTF-8"></property>  
        <property name="javaMailProperties">  
            <props>  
                <prop key="mail.smtp.auth">${mail.smtp.auth}</prop>  
                <prop key="mail.smtp.timeout">${mail.smtp.timeout}</prop>  
                <prop key="mail.smtp.starttls.enable">${mail.smtp.starttls.enable}</prop>
                <prop key="mail.smtp.socketFactory.port">${mail.smtp.port}</prop>
                <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
                <prop key="mail.smtp.socketFactory.fallback">false</prop>
            </props>  
        </property>  
    </bean>  
            
   


<context:property-placeholder location="classpath:dataBase.properties" ignore-unresolvable="true"/>



  <!-- 一、使用druid数据库连接池注册数据源 -->
  <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
     <!-- 基础配置 -->
     <property name="url" value="${mysql.jdbc.url}"></property>
     <property name="driverClassName" value="${mysql.jdbc.driverClassName}"></property>
     <property name="username" value="${mysql.jdbc.username}"></property>
     <property name="password" value="${password}"></property>
     <property name="filters" value="config" />
     <property name="connectionProperties" value="config.decrypt=true;config.decrypt.key=${publicKey}" />

     <!-- 关键配置 -->
     <!-- 初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时 --> 
     <property name="initialSize" value="3" /> 
     <!-- 最小连接池数量 --> 
     <property name="minIdle" value="2" /> 
     <!-- 最大连接池数量 --> 
     <property name="maxActive" value="15" />
     <!-- 配置获取连接等待超时的时间 --> 
     <property name="maxWait" value="10000" />

     <!-- 性能配置 -->
     <!-- 打开PSCache，并且指定每个连接上PSCache的大小 --> 
     <property name="poolPreparedStatements" value="true" /> 
     <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />

     <!-- 其他配置 -->
     <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 --> 
     <property name="timeBetweenEvictionRunsMillis" value="60000" />
     <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 --> 
     <property name="minEvictableIdleTimeMillis" value="300000" />
     <!--   建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，
               执行validationQuery检测连接是否有效。 -->
     <property name="testWhileIdle" value="true" />
     <!-- 这里建议配置为TRUE，防止取到的连接不可用 ,申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。--> 
     <property name="testOnBorrow" value="true" /> 
     <!-- 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能 -->
     <property name="testOnReturn" value="false" />
     </bean>
     <!-- 
     <bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName">
			<value>${mysql.jdbc.driverClassName}</value>
		</property>
		<property name="url">
			<value>${mysql.jdbc.url}</value>

		</property>
		<property name="username">
			<value>${mysql.jdbc.username}</value>
		</property>
		<property name="password">
			<value>${mysql.jdbc.password}</value>
			
		</property>
	</bean>
      -->
	

	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="typeAliasesPackage" value="springmvc.model" />
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:springmvc/mapper/*.xml" />
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="springmvc.mapper" />
	</bean>

</beans>